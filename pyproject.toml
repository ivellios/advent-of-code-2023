[tool.poetry]
name = "advent-of-code-2023"
version = "0.0.1"
description = "Solution of Advent of Code 2023 in Python"
authors = [
    "nekeal <szymon.sc.cader@gmail.com>",
]
license = "MIT"
readme = "README.md"

homepage = "https://nekeal.github.io/advent-of-code-2023"
repository = "https://github.com/nekeal/advent-of-code-2023"

classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

packages = [
    { include = "aoc", from = "src" }
]
[tool.poetry.scripts]
aoc = 'aoc.main:app'

[tool.poetry.dependencies]
python = ">=3.11, <4.0"
typer = "^0.9.0"
poetry = "^1.7.1"
black = "^23.11.0"

[tool.poetry.group.dev.dependencies]
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-watcher = "*"
ipython = "*"
ipdb = "*"
black = "*"
icecream = "*"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "src",
]

[tool.coverage.report]
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
disallow_any_unimported = false
disallow_untyped_defs = false
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
